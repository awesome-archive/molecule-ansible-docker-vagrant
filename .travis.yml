---
sudo: false
language: python
# configure python version (see https://docs.travis-ci.com/user/languages/python/#specifying-python-versions)
python:
  - "3.7"

env:
  - EC2_REGION=eu-central-1 BOTO_CONFIG="/dev/null" VAGRANT_DEFAULT_PROVIDER=libvirt"

services:
  - docker

# Cache the big Vagrant boxes
cache:
  directories:
    - /home/travis/.vagrant.d/boxes
    - /home/travis/.cache/pipenv

install:
  ### Vagrant installation
  # Install libvrt & KVM (see https://github.com/alvistack/ansible-role-virtualbox/blob/master/.travis.yml)
  - sudo apt-get update && sudo apt-get install -y bridge-utils dnsmasq-base ebtables libvirt-bin libvirt-dev qemu-kvm qemu-utils ruby-dev

  # Download Vagrant & Install Vagrant package
  - sudo wget -nv https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb
  - sudo dpkg -i vagrant_2.2.7_x86_64.deb

  # Vagrant correctly installed?
  - sudo vagrant --version

  # Install vagrant-libvirt Vagrant plugin
  - sudo vagrant plugin install vagrant-libvirt

  ### This projects pip deps
  # Install pipenv dependency manager
  - sudo -H pip install pipenv
  # Install required (and locked) dependecies from Pipfile.lock
  - sudo -H pipenv install

  ### AWS configuration
  # configure AWS CLI
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY
  - aws configure set aws_secret_access_key $AWS_SECRET_KEY
  - aws configure set default.region $DEPLOYMENT_REGION
  # show AWS CLI config
  - aws configure list

script:
  - cd docker

  # Molecule Testing Travis-locally with Vagrant
  - sudo molecule --debug create --scenario-name vagrant-ubuntu
  #- molecule --debug converge --scenario-name vagrant-ubuntu
  #- molecule --debug verify --scenario-name vagrant-ubuntu
  #- molecule --debug destroy --scenario-name vagrant-ubuntu

  # Molecule Testing Travis-locally with Docker
  - sudo molecule test