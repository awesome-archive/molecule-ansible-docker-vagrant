---
dist: bionic
language: minimal

env:
  - VAGRANT_DEFAULT_PROVIDER=libvirt

services:
  - docker

# Cache the big Vagrant boxes
cache:
  directories:
    - /home/travis/.vagrant.d/boxes
    - /home/travis/.cache/pipenv

install:
  ### Vagrant installation
  # Install libvrt & KVM (see https://github.com/alvistack/ansible-role-virtualbox/blob/master/.travis.yml)
#  - sudo apt-get update && sudo apt-get install -y bridge-utils dnsmasq-base ebtables libvirt-bin libvirt-dev qemu-kvm qemu-utils ruby-dev
#
#  # Download Vagrant & Install Vagrant package
#  - sudo wget -nv https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb
#  - sudo dpkg -i vagrant_2.2.7_x86_64.deb
#  - sudo vagrant --version
#
#  # Install vagrant-libvirt Vagrant plugin
#  - sudo vagrant plugin install vagrant-libvirt
#  - sudo vagrant plugin list

  # Install Python 3 for usage together with sudo into our minimal Travis build image
  - sudo apt update && sudo apt install software-properties-common
  - sudo add-apt-repository ppa:deadsnakes/ppa -y && sudo apt update
  - sudo apt install python3.7
  - sudo python3 ––version
  - curl -skL https://bootstrap.pypa.io/get-pip.py | sudo -H python3

  # Install required (and locked) dependecies with pipenv
  - sudo -H pip3 install pipenv
  - sudo -H pipenv install

script:
  - cd docker

  # Molecule Testing Travis-locally with Docker
  - sudo -E pipenv run molecule test

  # Molecule Testing Travis-locally with Vagrant
  - sudo -E pipenv run molecule create --scenario-name vagrant-ubuntu
  - sudo -E pipenv run molecule converge --scenario-name vagrant-ubuntu
  - sudo -E pipenv run molecule verify --scenario-name vagrant-ubuntu
  - sudo -E pipenv run molecule destroy --scenario-name vagrant-ubuntu